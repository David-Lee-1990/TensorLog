TUTORIAL/DOCS

  see docs/README.txt

BUGS: 

 - weights should work with a sparse parameter vector
 - cora fails with optimize_component_multiply turned on
 - csc_matrixes seem to cause unpredictable behavior, should
 double check these in optimized sections 
 - head p(X,X) doesn't work

CLEANUPS:
 - clean up experiments to use expv2 and clean out the dead code

DESIGN FLAWS: 1 fails but 2 is ok even tho both are polytrees.

 1 p(X,Y) :- q(X,X1),r(Y,Y1),s(X1,Y1)
 2 p(X,Y) :- q(X,X1),s(X1,Y1),r(Y,Y1)

EXTENSIONS:
 - throw sensible error when a novel rule constant is seen

config:
 - might want to include, in config.py, an overall 'top' configuration
 which includes the others as subconfigurations.  also might want to
 serialize/deserialize them.

learning:
 - serializable multi-task datasets
  propprExamplesAsData(db,fileName): convert to provide (xdict,ydict) outputs
 - adagrad & holdout set for convergence
 - multithreading

MORE EXPERIMENTS:

 - Rose's representation learning/recommendation
 - SSL

Structure learning:
 - se is "superedge", ise is inverse superedge

phase 1, get last arguments of if(Q,R), ifinv(Q,R), chain(P,Q,R).
phase1 is used as edge in transitive closure/rwr type rules with
positive examples of any relation.

phase1(X,Y) :- 
	  se(X,RY),f2(RY,Y),
	  f1(RY,Y), weight_if2(R).
phase1(X,Y) :- 
	  ise(X,RY),f2(RY,Y),
	  f1(RY,Y), weight_ifinv2(R).
phase1(X,Y) :-
	  se(X,QZ),f2(QZ,Z),se(Z,RY),f2(RY,Y)
	  f1(RY,R),weight_chain3(R).

phase2, get penultinate arguments. We will specialize this theory for
the r's with high weights from phase1, and then use phase2 as initial
step in transitive closure rules for facts Q,X,Y [work this out...]

phase2(QX,Y) :- phase2_r1(QX,Y).
phase2(QX,Y) :- phase2_r2(QX,Y).
...
phase2_r(QX,Y) :- 
	  f2(QX,X),r(X,Y),
	  f1(QX,Q),weight_if1(Q).
...
phase2_r(QX,Y) :- 
	  f2(QX,X),r(Y,X),
	  f1(QX,Q),weight_ifinv1(Q).
...
phase2_r(X,Y) :-
	  se(X,QZ),f2(QZ,Z),r(Z,Y),
	  f1(QZ,Q),weight_chain2_r(Q).

phase3 for chains only:

phase2_rq(PX,Y) :-
	  f2(PX,X),q(X,Z),r(Z,Y)
	  f1(PX,P),weight_chain1_rq(P).

